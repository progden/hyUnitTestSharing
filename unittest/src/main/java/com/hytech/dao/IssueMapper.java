package com.hytech.dao;

import java.util.List;
import java.util.Map;

import com.hytech.model.Issue;

import org.apache.ibatis.annotations.Delete;
import org.apache.ibatis.annotations.Insert;
import org.apache.ibatis.annotations.InsertProvider;
import org.apache.ibatis.annotations.Result;
import org.apache.ibatis.annotations.Results;
import org.apache.ibatis.annotations.Select;
import org.apache.ibatis.annotations.Update;
import org.apache.ibatis.annotations.UpdateProvider;
import org.apache.ibatis.type.JdbcType;

public interface IssueMapper {
    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table Issue
     *
     * @mbggenerated Thu Aug 13 00:55:54 CST 2015
     */
    @Delete({
        "delete from Issue",
        "where id = #{id,jdbcType=INTEGER}"
    })
    int deleteByPrimaryKey(Integer id);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table Issue
     *
     * @mbggenerated Thu Aug 13 00:55:54 CST 2015
     */
    @Insert({
        "insert into Issue (id, status, ",
        "title, creater, ",
        "owner, dt_create, ",
        "dt_lastupdate, content)",
        "values (#{id,jdbcType=INTEGER}, #{status,jdbcType=VARCHAR}, ",
        "#{title,jdbcType=VARCHAR}, #{creater,jdbcType=VARCHAR}, ",
        "#{owner,jdbcType=VARCHAR}, #{dtCreate,jdbcType=TIMESTAMP}, ",
        "#{dtLastupdate,jdbcType=TIMESTAMP}, #{content,jdbcType=LONGVARCHAR})"
    })
    int insert(Issue record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table Issue
     *
     * @mbggenerated Thu Aug 13 00:55:54 CST 2015
     */
    @InsertProvider(type=IssueSqlProvider.class, method="insertSelective")
    int insertSelective(Issue record);

    @Select({
        "select",
        "id, status, title, creater, owner, dt_create, dt_lastupdate, content",
        "from Issue "+
        "where id = #{key} or content like '%${key}%' " +
        "order by id desc"
    })
    @Results({
        @Result(column="id", property="id", jdbcType=JdbcType.INTEGER, id=true),
        @Result(column="status", property="status", jdbcType=JdbcType.VARCHAR),
        @Result(column="title", property="title", jdbcType=JdbcType.VARCHAR),
        @Result(column="creater", property="creater", jdbcType=JdbcType.VARCHAR),
        @Result(column="owner", property="owner", jdbcType=JdbcType.VARCHAR),
        @Result(column="dt_create", property="dtCreate", jdbcType=JdbcType.TIMESTAMP),
        @Result(column="dt_lastupdate", property="dtLastupdate", jdbcType=JdbcType.TIMESTAMP),
        @Result(column="content", property="content", jdbcType=JdbcType.LONGVARCHAR)
    })
    List<Issue> selectByCondition(Map<String, String> param);
    
    
    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table Issue
     *
     * @mbggenerated Thu Aug 13 00:55:54 CST 2015
     */
    @Select({
        "select",
        "id, status, title, creater, owner, dt_create, dt_lastupdate, content",
        "from Issue",
        "where id = #{id,jdbcType=INTEGER}"
    })
    @Results({
        @Result(column="id", property="id", jdbcType=JdbcType.INTEGER, id=true),
        @Result(column="status", property="status", jdbcType=JdbcType.VARCHAR),
        @Result(column="title", property="title", jdbcType=JdbcType.VARCHAR),
        @Result(column="creater", property="creater", jdbcType=JdbcType.VARCHAR),
        @Result(column="owner", property="owner", jdbcType=JdbcType.VARCHAR),
        @Result(column="dt_create", property="dtCreate", jdbcType=JdbcType.TIMESTAMP),
        @Result(column="dt_lastupdate", property="dtLastupdate", jdbcType=JdbcType.TIMESTAMP),
        @Result(column="content", property="content", jdbcType=JdbcType.LONGVARCHAR)
    })
    Issue selectByPrimaryKey(Integer id);

    @Select({
        "select",
        "id, status, title, creater, owner, dt_create, dt_lastupdate, content",
        "from Issue "+
        "order by id desc"
    })
    @Results({
        @Result(column="id", property="id", jdbcType=JdbcType.INTEGER, id=true),
        @Result(column="status", property="status", jdbcType=JdbcType.VARCHAR),
        @Result(column="title", property="title", jdbcType=JdbcType.VARCHAR),
        @Result(column="creater", property="creater", jdbcType=JdbcType.VARCHAR),
        @Result(column="owner", property="owner", jdbcType=JdbcType.VARCHAR),
        @Result(column="dt_create", property="dtCreate", jdbcType=JdbcType.TIMESTAMP),
        @Result(column="dt_lastupdate", property="dtLastupdate", jdbcType=JdbcType.TIMESTAMP),
        @Result(column="content", property="content", jdbcType=JdbcType.LONGVARCHAR)
    })
    List<Issue> selectAll();

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table Issue
     *
     * @mbggenerated Thu Aug 13 00:55:54 CST 2015
     */
    @UpdateProvider(type=IssueSqlProvider.class, method="updateByPrimaryKeySelective")
    int updateByPrimaryKeySelective(Issue record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table Issue
     *
     * @mbggenerated Thu Aug 13 00:55:54 CST 2015
     */
    @Update({
        "update Issue",
        "set status = #{status,jdbcType=VARCHAR},",
          "title = #{title,jdbcType=VARCHAR},",
          "creater = #{creater,jdbcType=VARCHAR},",
          "owner = #{owner,jdbcType=VARCHAR},",
          "dt_create = #{dtCreate,jdbcType=TIMESTAMP},",
          "dt_lastupdate = #{dtLastupdate,jdbcType=TIMESTAMP},",
          "content = #{content,jdbcType=LONGVARCHAR}",
        "where id = #{id,jdbcType=INTEGER}"
    })
    int updateByPrimaryKeyWithBLOBs(Issue record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table Issue
     *
     * @mbggenerated Thu Aug 13 00:55:54 CST 2015
     */
    @Update({
        "update Issue",
        "set status = #{status,jdbcType=VARCHAR},",
          "title = #{title,jdbcType=VARCHAR},",
          "creater = #{creater,jdbcType=VARCHAR},",
          "owner = #{owner,jdbcType=VARCHAR},",
          "dt_lastupdate = #{dtLastupdate,jdbcType=TIMESTAMP}",
        "where id = #{id,jdbcType=INTEGER}"
    })
    int updateByPrimaryKey(Issue record);
}